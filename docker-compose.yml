services:

  postgres:
    container_name: postgres
    image: postgres:16.4
    env_file:
      - .env
    restart: always
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    depends_on:
      - nginx

  api:
    container_name: api
    build: ./api
    env_file:
      - .env
    volumes:
      - /home/src/questions.txt:/app/api/questions.txt
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    depends_on:
      - postgres

  bot:
    container_name: bot
    build: ./bot
    env_file:
      - .env
    command: python main.py
    ports:
      - 8001:8001
    depends_on:
      - api

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./server_data/nginx:/etc/nginx/conf.d
      - ./server_data/certbot/conf:/etc/letsencrypt
      - ./server_data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./server_data/certbot/conf:/etc/letsencrypt
      - ./server_data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

volumes:
  postgres_data:

